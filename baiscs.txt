1) What iA CDN?

(Content Delivery Network) is a group of servers spread out over many locations. These servers store duplicate copies of data so that servers can fulfill data requests based on which servers are closest to the respective end-users. CDNs make for fast service less affected by high traffics CDN?
A CDN (Content Delivery Network) is a group of servers spread out over many locations. These servers store duplicate copies of data so that servers can fulfill data requests based on which servers are closest to the respective end-users. CDNs make for fast service less affected by high traffic


2) What is CORS

 CORS (Cross-Origin Resource Sharing) is a system, consisting of transmitting HTTP headers, that determines whether browsers block frontend JavaScript code from accessing responses for cross-origin requests. The same-origin security policy forbids cross-origin access to resources.

 3) What is defer and async

 If you’re working with JavaScript, it’s important to understand the difference between async and defer attributes. Async allows your script to run as soon as it’s loaded, without blocking other elements on the page. Defer means your script will only execute after the page has finished loading.

 4) Diffrence betweeen framework and Library?

#Framework            	            
1.	It comprises of lot of APIs , compilers , support programs , libraries etc. 
2.	It is difficult to replace frameworks.
3.	A framework development requires a lot of code that decrease performance and increase the load time.
4.	Including framework smoothly into an existing project is impossible.
5.	Its example are AngularJS , Spring , NodeJS , etc.

#Library
1. It is a collection of helper modules , classes , objects , functions , pre-written code , etc.
2. A library is easy to be replaced with another library.
3. Building a library requires less code , so there is better performance and fast load time.
4. Libraries can be integrated easily into existing projects to add some specific functionality.
5. Its example are JQuery , React JS , etc. 

--------------------------------------------------------------------------------------------------------------------------
1. What is a bundler?
A bundler is a development tool that combines many JavaScript code files into a single one that is production-ready loadable in the browser

For example:

parcel
webpack (used by create-react-app) and
vite ( prounounced as veet)
2. npm :
1. About :
It is a tool used for package managemnet.

Note :
npm does not stand for node package manager but everything else.

npm alternative -> yarn
2. npm setup :
npm init
npm init -y can be used to skip the setup step, npm takes care of it and creates the package.json json file automatically , but without configurations.

3. Difference betweeen package.json and package-lock.json.
package.json :
this file is mandatory for every project
It contains basicinformation about the project
Application name/version/scripts (ng scripts)
package-lock.json :
This file is automatically generated for those operations where npm modifies either the node_module tree or package-json.

It is generated after an npm install

It allows future devs & automated systems to download the same dependencies as the project.

it also allows to go back to the past version of the dependencies without actual ‘committing the node_modules folder.

It records the same version of the installed packages which allows to reinstall them. Futuee installs wll be capable of building identical description tree.

~ or ^ in package.json file : These are used with the versions of the package installed.
For example in package.json file:

"dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  }
~ : we can use it for minor version updates for a package.
^ : we can use it for major version updates for a package.
If none of them is present , that means only the version specified in package.json file is used in the development.

3. Parcel:
Parcel is a bundler used for development and productions purposes.

Parcel Features:
HMR - Hot Module Replacement - parcel keeps track of file changes via file watcher algorithm and renders the changes in the files
File watcher algorithm - made with C++
MINIFY
BUNDLING
Cleaning our code
DEV and production Build
Super fast building algorithm
does image optimization also
Caching while development
Compresses
Compatible with older version of browser
HTTPS in dev
port Number
Consistent hashin algorithm
Zero Configuration
installation commands:
Install:
npm install -D parcel
-D is used for development and as a development dependency.

Parcel Commands :
For development build:
npx parcel <entry_point> 
For production build :
npx parcel build <entry_point> 
4. Why react is fast?
It is not only the virtual DOM that makes React faster but other components like bundlers (e.g. parcel, webpack ,vite etc. ) and development ecosystme also.

5. Transitive dependencies:
It is a type of dependency where one dependency requires another dependency to work properly and another dependency requires an another dependecy.

6. devDependencies vs dependency :
A dependency is a library that a project needs to function effectively. DevDependencies are the packages a developer needs during development.

7. What is Tree Shaking?
Tree shaking is process of removing the unwanted code that we do not use while developing the application

8. What is Parcel/Webpack? Why do we need it?
Parcel/Webpack are type of bundlers that we use to power our application with different type functionalities and features.

Some of the features that they have:

Image optimization - Optimize the images for frontend
Minification - minify the code
HMR (Hot module replacement) uses file watcher algorithms - They keep track of the changes made while developing the application and renders them on the web UI.
Code cleaning
9. What is npx ?
npx is a tool that is used to execute the packages registered on the npm registry without installin them.

10. What is .parcel-cache?
.parcel-cache is used by parsel to reduce the building time. .parcel-cache contains the imformation about the project so that it can reduce the building time if we rebuild the application again.

11. What is .gitignore? What should we add and not add into it?
This file contains the list of files that we should not commit to the repository.

12. Why should I not modify package-lock.json?
package-lock.json file contains the information about the dependencies and their versions used in the project. Deleting it would cause depencies issues in the production environment.

13. What is the dist folder?
dist folder is created when parcel creates the build for the application . It contains the HTML and CSS and JS with other files for the build.

